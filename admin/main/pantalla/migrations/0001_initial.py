# Generated by Django 3.1.13 on 2021-10-18 14:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id_budget', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'budget',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Catalogue',
            fields=[
                ('id_catalogue', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'catalogue',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id_client', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_budget', models.ForeignKey(db_column='id_budget', on_delete=django.db.models.deletion.CASCADE, to='pantalla.budget')),
            ],
            options={
                'db_table': 'client',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClientType',
            fields=[
                ('id_client_type', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'client_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Delimiter',
            fields=[
                ('id_delimiter', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'delimiter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id_destination', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'destination',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DestinationService',
            fields=[
                ('id_destination_service', models.AutoField(primary_key=True, serialize=False)),
                ('id_destination', models.ForeignKey(db_column='id_destination', on_delete=django.db.models.deletion.CASCADE, to='pantalla.destination')),
            ],
            options={
                'db_table': 'destination_service',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KeyActivity',
            fields=[
                ('id_key_activity', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'key_activity',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LegalClientType',
            fields=[
                ('id_legal_client_type', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'legal_client_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MediaType',
            fields=[
                ('id_media_type', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'media_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PlaylistState',
            fields=[
                ('id_playlist_state', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'playlist_state',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id_promo', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'promo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Purpouse',
            fields=[
                ('id_purpouse', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'purpouse',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id_quote', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_travelexper_user', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quote',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id_service', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_budget', models.ForeignKey(db_column='id_budget', on_delete=django.db.models.deletion.CASCADE, to='pantalla.budget')),
            ],
            options={
                'db_table': 'service',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id_service_type', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'service_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SupplierType',
            fields=[
                ('id_supplier_type', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'supplier_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TravelRitm',
            fields=[
                ('id_travel_ritm', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'travel_ritm',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id_user', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
            ],
            options={
                'db_table': 'user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id_supplier', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_supplier_type', models.ForeignKey(db_column='id_supplier_type', on_delete=django.db.models.deletion.CASCADE, to='pantalla.suppliertype')),
            ],
            options={
                'db_table': 'supplier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_service', models.ForeignKey(db_column='id_service', on_delete=django.db.models.deletion.CASCADE, to='pantalla.service')),
                ('id_supplier', models.ForeignKey(db_column='id_supplier', on_delete=django.db.models.deletion.CASCADE, to='pantalla.supplier')),
            ],
            options={
                'db_table': 'service_supplier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceDetail',
            fields=[
                ('id_service_detail', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_delimiter', models.ForeignKey(db_column='id_delimiter', on_delete=django.db.models.deletion.CASCADE, to='pantalla.delimiter')),
                ('id_key_activity', models.ForeignKey(db_column='id_key_activity', on_delete=django.db.models.deletion.CASCADE, to='pantalla.keyactivity')),
                ('id_purpouse', models.ForeignKey(db_column='id_purpouse', on_delete=django.db.models.deletion.CASCADE, to='pantalla.purpouse')),
                ('id_service', models.ForeignKey(db_column='id_service', on_delete=django.db.models.deletion.CASCADE, to='pantalla.service')),
                ('id_travle_ritm', models.ForeignKey(db_column='id_travle_ritm', on_delete=django.db.models.deletion.CASCADE, to='pantalla.travelritm')),
            ],
            options={
                'db_table': 'service_detail',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='service',
            name='id_service_type',
            field=models.ForeignKey(db_column='id_service_type', on_delete=django.db.models.deletion.CASCADE, to='pantalla.servicetype'),
        ),
        migrations.CreateModel(
            name='QuoteState',
            fields=[
                ('id_quote_state', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_destination_service', models.ForeignKey(db_column='id_destination_service', on_delete=django.db.models.deletion.CASCADE, to='pantalla.destinationservice')),
            ],
            options={
                'db_table': 'quote_state',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuoteDetail',
            fields=[
                ('id_quote_detail', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_promo', models.ForeignKey(db_column='id_promo', on_delete=django.db.models.deletion.CASCADE, to='pantalla.promo')),
                ('id_quote', models.ForeignKey(db_column='id_quote', on_delete=django.db.models.deletion.CASCADE, to='pantalla.quote')),
            ],
            options={
                'db_table': 'quote_detail',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='quote',
            name='id_agent_user',
            field=models.ForeignKey(db_column='id_agent_user', on_delete=django.db.models.deletion.CASCADE, to='pantalla.user'),
        ),
        migrations.AddField(
            model_name='quote',
            name='id_client',
            field=models.ForeignKey(db_column='id_client', on_delete=django.db.models.deletion.CASCADE, to='pantalla.client'),
        ),
        migrations.AddField(
            model_name='quote',
            name='id_quote_state',
            field=models.ForeignKey(db_column='id_quote_state', on_delete=django.db.models.deletion.CASCADE, to='pantalla.quotestate'),
        ),
        migrations.CreateModel(
            name='PromoDetail',
            fields=[
                ('id_promo_detail', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_promo', models.ForeignKey(db_column='id_promo', on_delete=django.db.models.deletion.CASCADE, to='pantalla.promo')),
            ],
            options={
                'db_table': 'promo_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id_playlist', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_destination_service', models.ForeignKey(db_column='id_destination_service', on_delete=django.db.models.deletion.CASCADE, to='pantalla.destinationservice')),
                ('id_playlist_state', models.ForeignKey(db_column='id_playlist_state', on_delete=django.db.models.deletion.CASCADE, to='pantalla.playliststate')),
            ],
            options={
                'db_table': 'playlist',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id_media', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_destination_service', models.ForeignKey(db_column='id_destination_service', on_delete=django.db.models.deletion.CASCADE, to='pantalla.destinationservice')),
                ('id_media_type', models.ForeignKey(db_column='id_media_type', on_delete=django.db.models.deletion.CASCADE, to='pantalla.mediatype')),
            ],
            options={
                'db_table': 'media',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='destinationservice',
            name='id_service',
            field=models.ForeignKey(db_column='id_service', on_delete=django.db.models.deletion.CASCADE, to='pantalla.service'),
        ),
        migrations.AddField(
            model_name='client',
            name='id_client_type',
            field=models.ForeignKey(db_column='id_client_type', on_delete=django.db.models.deletion.CASCADE, to='pantalla.clienttype'),
        ),
        migrations.AddField(
            model_name='client',
            name='id_legal_client_type',
            field=models.ForeignKey(db_column='id_legal_client_type', on_delete=django.db.models.deletion.CASCADE, to='pantalla.legalclienttype'),
        ),
        migrations.CreateModel(
            name='CatalogueDetail',
            fields=[
                ('id_catalogue_detail', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('updated', models.DateTimeField(editable=False)),
                ('id_catalogue', models.ForeignKey(db_column='id_catalogue', on_delete=django.db.models.deletion.CASCADE, to='pantalla.catalogue')),
            ],
            options={
                'db_table': 'catalogue_detail',
                'managed': True,
            },
        ),
    ]
