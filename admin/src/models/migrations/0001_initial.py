# Generated by Django 3.2.9 on 2021-12-22 22:11

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgeFriendlyRange',
            fields=[
                ('age_friendly_range_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'age_friendly_range',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('agent_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'agent',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('budget_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'budget',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'city',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('description', models.CharField(max_length=64)),
                ('client_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_contact', models.CharField(max_length=64)),
                ('dni', models.CharField(max_length=32, unique=True)),
                ('is_owner', models.BooleanField()),
                ('name_contact_2', models.CharField(blank=True, max_length=64, null=True)),
                ('email', models.CharField(max_length=64, unique=True)),
                ('phone', models.CharField(max_length=64, unique=True)),
                ('address', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'client',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientType',
            fields=[
                ('client_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('props', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client_type',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CountryDestination',
            fields=[
                ('country_destination_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'country_destination',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('day_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=64, null=True)),
                ('date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'day',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Delimiter',
            fields=[
                ('delimiter_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'delimiter',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('destination_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'destination',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IncludedOption',
            fields=[
                ('included_option_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'included_option',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('itinerary_id', models.AutoField(primary_key=True, serialize=False)),
                ('pax', models.IntegerField()),
                ('arrival_date', models.DateField(blank=True, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'itinerary',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItineraryDay',
            fields=[
                ('itinerary_day_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.BigIntegerField()),
            ],
            options={
                'db_table': 'itinerary_day',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItineraryState',
            fields=[
                ('itinerary_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'itinerary_state',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeyActivity',
            fields=[
                ('key_activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'key_activity',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LegalClientType',
            fields=[
                ('legal_client_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'legal_client_type',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('media_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'media',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediaType',
            fields=[
                ('media_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'media_type',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Origin',
            fields=[
                ('origin_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'origin',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('payment_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'payment_type',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('playlist_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('playlist', models.TextField(blank=True, null=True)),
                ('playlist_slug', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'playlist',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('promo_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('discount', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'promo',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('purpose_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'purpose',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('child_frendly', models.BooleanField()),
                ('infant_friendly', models.BooleanField()),
                ('me', models.BooleanField()),
                ('pet_friendly', models.BooleanField()),
                ('open_days', models.CharField(max_length=16)),
                ('close_time', models.TimeField()),
                ('open_time', models.TimeField()),
                ('cost', models.FloatField()),
                ('selling_price', models.FloatField()),
                ('name', models.CharField(max_length=16)),
                ('description', models.CharField(max_length=64)),
                ('duration', models.BigIntegerField()),
                ('observation', models.CharField(blank=True, max_length=64, null=True)),
                ('max_capacity', models.BigIntegerField()),
                ('props', models.TextField()),
            ],
            options={
                'db_table': 'service',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceCruise',
            fields=[
                ('internet', models.BooleanField()),
                ('tc_cons', models.BooleanField()),
                ('wetsuits', models.BooleanField()),
                ('dr_name', models.CharField(max_length=32)),
                ('description', models.CharField(blank=True, max_length=32, null=True)),
                ('fleet', models.TextField(blank=True, null=True)),
                ('operator_name', models.CharField(blank=True, max_length=32, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=32, null=True)),
                ('ship_name', models.CharField(max_length=64)),
                ('aet', models.FloatField(blank=True, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('pax_daily_rate', models.FloatField(blank=True, null=True)),
                ('cab_number', models.BigIntegerField(blank=True, null=True)),
                ('cab_type', models.BigIntegerField(blank=True, null=True)),
                ('category', models.BigIntegerField(blank=True, null=True)),
                ('format', models.BigIntegerField(blank=True, null=True)),
                ('modality', models.BigIntegerField(blank=True, null=True)),
                ('pax', models.BigIntegerField(blank=True, null=True)),
                ('port_registry', models.BigIntegerField(blank=True, null=True)),
                ('ship_type', models.BigIntegerField(blank=True, null=True)),
                ('tri_number', models.BigIntegerField(blank=True, null=True)),
                ('additionals', models.TextField(blank=True, null=True)),
                ('constraints', models.TextField(blank=True, null=True)),
                ('guides', models.TextField(blank=True, null=True)),
                ('itinerary', models.TextField(blank=True, null=True)),
                ('web_page', models.CharField(blank=True, max_length=64, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'service_cruise',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceHotel',
            fields=[
                ('num_room_types', models.IntegerField(blank=True, null=True)),
                ('balcony', models.BooleanField(blank=True, null=True)),
                ('budget_fk', models.BigIntegerField(blank=True, null=True)),
                ('child_friendly', models.BooleanField(blank=True, null=True)),
                ('extra_bed', models.BooleanField(blank=True, null=True)),
                ('fit_rate', models.BooleanField(blank=True, null=True)),
                ('group_from', models.BigIntegerField(blank=True, null=True)),
                ('group_rate', models.BigIntegerField(blank=True, null=True)),
                ('guide_transport', models.FloatField(blank=True, null=True)),
                ('hotel_name', models.CharField(blank=True, max_length=64, null=True)),
                ('infant_friendly', models.BooleanField(blank=True, null=True)),
                ('key_activity_type_fk', models.BigIntegerField(blank=True, null=True)),
                ('max_capacity', models.BigIntegerField(blank=True, null=True)),
                ('midweek_rate', models.FloatField(blank=True, null=True)),
                ('observations', models.CharField(blank=True, max_length=64, null=True)),
                ('outside_window', models.BooleanField(blank=True, null=True)),
                ('pet_friendly', models.BooleanField(blank=True, null=True)),
                ('purpouse_fk', models.BigIntegerField(blank=True, null=True)),
                ('roh_from', models.BooleanField(blank=True, null=True)),
                ('ro_house', models.BooleanField(blank=True, null=True)),
                ('romantic_package', models.TextField(blank=True, null=True)),
                ('romantic_rate', models.FloatField(blank=True, null=True)),
                ('room_category', models.CharField(blank=True, max_length=64, null=True)),
                ('room_description', models.CharField(blank=True, max_length=64, null=True)),
                ('selling_price', models.FloatField(blank=True, null=True)),
                ('supplier_fk', models.BigIntegerField(blank=True, null=True)),
                ('tax1_iva', models.FloatField(blank=True, null=True)),
                ('tax2_service', models.FloatField(blank=True, null=True)),
                ('tax3_citytax', models.FloatField(blank=True, null=True)),
                ('tax4', models.FloatField(blank=True, null=True)),
                ('terrace_patio', models.BooleanField(blank=True, null=True)),
                ('tub_jacuzzi', models.BooleanField(blank=True, null=True)),
                ('weekend_rate', models.FloatField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'service_hotel',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('service_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'service_type',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplier_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=64, null=True)),
                ('tax_id', models.BigIntegerField(unique=True)),
                ('legal_name', models.CharField(max_length=32, unique=True)),
                ('commercial_name', models.CharField(max_length=32)),
                ('contact_name', models.CharField(max_length=32)),
                ('website', models.CharField(blank=True, max_length=32, null=True)),
                ('credit_days', models.CharField(blank=True, max_length=32, null=True)),
                ('finance_email', models.CharField(blank=True, max_length=32, null=True)),
                ('commercial_email', models.CharField(blank=True, max_length=32, null=True)),
                ('finance_phone', models.BigIntegerField(blank=True, null=True)),
                ('commercial_phone', models.BigIntegerField(blank=True, null=True)),
                ('sector', models.CharField(blank=True, max_length=32, null=True)),
                ('principal_street', models.CharField(blank=True, max_length=32, null=True)),
                ('secondary_street', models.CharField(blank=True, max_length=32, null=True)),
                ('building_number', models.CharField(blank=True, max_length=32, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('long', models.FloatField(blank=True, null=True)),
                ('props', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'supplier',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupplierRule',
            fields=[
                ('supplier_rule_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'supplier_rule',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupplierType',
            fields=[
                ('supplier_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'supplier_type',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('transport_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('rate', models.FloatField()),
            ],
            options={
                'db_table': 'transport',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransportRange',
            fields=[
                ('transport_range_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'transport_range',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransportService',
            fields=[
                ('transport_service_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'transport_service',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TravelExpert',
            fields=[
                ('travel_expert_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'travel_expert',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TravelRitm',
            fields=[
                ('travel_ritm_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=64)),
                ('capacity', models.BigIntegerField()),
            ],
            options={
                'db_table': 'travel_ritm',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=64, null=True)),
                ('firstname', models.CharField(blank=True, max_length=16, null=True)),
                ('lastname', models.CharField(blank=True, max_length=16, null=True)),
                ('username', models.CharField(blank=True, max_length=16, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=64, null=True)),
                ('identification', models.CharField(max_length=16, unique=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True, unique=True)),
            ],
            options={
                'db_table': 'user',
                'permissions': (('add_item', 'Can add item'), ('change_item', 'Can change item'), ('delete_item', 'Can delete item')),
                'managed': False,
            },
        ),
    ]
